<controls:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:EMOTM.Infrastructure"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:xtk="clr-namespace:Xceed;assembly=Xceed.Wpf.Toolkit"
        xmlns:ignore="http://www.ignore.com"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        x:Class="EMOTM.MainWindow"
        mc:Ignorable="d ignore"
        Height="400"
        Width="400"
        Title="EMOTM"
        >

    <controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:WhichMinOpacityConverter x:Key="whichMinConverter" />
            <converters:ThatMinVisConverter x:Key="ThatMinVisConverter" />
            <converters:ColumnSpanConverter x:Key="colSpanConverter" />
        </ResourceDictionary>
    </controls:MetroWindow.Resources>

    <controls:MetroWindow.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}" />
    </controls:MetroWindow.DataContext>

    <Grid x:Name="LayoutRoot">

        <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="3*" />
            <RowDefinition />
            <RowDefinition Height="2*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <!-- ThisMinute -->
            <Grid ColumnSpan="{Binding CntWorkItems, Converter={StaticResource colSpanConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <TextBlock x:Name="ThisMinTxt" Opacity="{Binding WhichMinute, Mode=TwoWay, Converter={StaticResource whichMinConverter}, ConverterParameter=ThisMinute}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <Bold>This</Bold> minute
                </TextBlock>
                <xctk:WatermarkTextBox Watermark="List work to do This minute" Grid.Row="1" Opacity="{Binding WhichMinute, Mode=TwoWay, Converter={StaticResource whichMinConverter}, ConverterParameter=ThisMinute}" HorizontalContentAlignment="Center" AcceptsReturn="True" />
            </Grid>
            <!-- ThatMinute -->
            <Grid Grid.Column="1"  Visibility="{Binding CntWorkItems, Converter={StaticResource ThatMinVisConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <TextBlock x:Name="ThatMinTxt" Opacity="{Binding WhichMinute, Mode=TwoWay, Converter={StaticResource whichMinConverter}, ConverterParameter=ThatMinute}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" ><Bold>That</Bold> minute</TextBlock>
                <xctk:WatermarkTextBox Watermark="List work to do That minute" Grid.Row="1" Grid.Column="1"  Opacity="{Binding WhichMinute, Mode=TwoWay, Converter={StaticResource whichMinConverter}, ConverterParameter=ThatMinute}" HorizontalContentAlignment="Center" AcceptsReturn="True" />
            </Grid>
        </Grid>

        <TextBlock Grid.Row="1" x:Name="TimerDisplay" Text="{Binding TimerText, Mode=TwoWay}" FontSize="54" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <TextBlock Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center">Placeholder</TextBlock>
        <!-- <TextBlock Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center">Placeholder</TextBlock> -->
        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" Grid.ColumnSpan="4" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="4" Margin="0,0,6,0">Work Lists</TextBlock>
                <xctk:IntegerUpDown Grid.Column="2" Minimum="1" Maximum="2" Value="{Binding CntWorkItems, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Total Time:" Margin="0,0,6,0" />
                <xctk:IntegerUpDown x:Name="TotalTime" Value="{Binding TotalTime, Mode=TwoWay}" Minimum="2"  HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" />
            </StackPanel>
            <Button x:Name="StartBtn" Command="{Binding StartTimerCmd}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" IsDefault="True">Start</Button>
            <Button x:Name="StopBtn" Command="{Binding StopTimerCmd}" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Stop" Grid.Row="1" />
            <Button Grid.Column="3" IsEnabled="False"  HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1">Test</Button>
        </Grid>
    </Grid>
</controls:MetroWindow>