<controls1:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="clr-namespace:EMOTM.Infrastructure"
    xmlns:ignore="http://www.ignore.com"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:local="clr-namespace:EMOTM"
    xmlns:controls1="http://metro.mahapps.com/winfx/xaml/controls"
    WindowState="{Binding WindowState}"
    ResizeMode="CanResizeWithGrip"
    x:Class="EMOTM.MainWindow"
    mc:Ignorable="d ignore"
    Height="400"
    Width="500"
    MinHeight="300"
    MinWidth="450"
    Title="{Binding MainWinTitle, Mode=TwoWay}">

    <controls1:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:MultiValueOpacityConverter x:Key="multiValueOpacityConverter" />
            <converters:WhichMinOpacityConverter x:Key="whichMinConverter" />
            <converters:WhichMinuteForegroundConverter x:Key="whichMinFGConverter" />
            <converters:MultiValueFgColorConverter x:Key="multiValueFgColorConverter" />
            <converters:ThatMinVisConverter x:Key="ThatMinVisConverter" />
            <!--<converters:MainWinTitleConverter x:Key="mainWinTitleConverter" />-->
            <!-- <converters:ColumnSpanConverter x:Key="colSpanConverter" /> -->
            <converters:EnumBooleanConverter x:Key="EnumBooleanConverter" />
            <converters:WindowStateFontSizeConverter x:Key="WinStateFontSizeConverter" />
            <converters:TimerStateToEnabledConverter x:Key="TimerStateConverter" />
            <converters:TimerStateToVisibilityConverter x:Key="TimerStateVisibilityConverter" />
            <converters:ListsColumnWidthConverter x:Key="ListsColWidthConverter" />
            <converters:WorkItemFontSizeConverter x:Key="WorkItemFontSizeConverter" />
            <converters:StartBtnCaptionConverter x:Key="StartBtnCptnConverter" />
            <converters:StopBtnCaptionConverter x:Key="StopBtnCptnConverter" />
        </ResourceDictionary>
    </controls1:MetroWindow.Resources>
    <controls1:MetroWindow.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA9C6F7" Offset="0"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
    </controls1:MetroWindow.Background>

    <controls1:MetroWindow.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}" />
    </controls1:MetroWindow.DataContext>

    <Grid x:Name="LayoutRoot">
        <Grid.Resources>
            <!--
                 From:  https://github.com/MahApps/MahApps.Metro/issues/676#issuecomment-25429570
                 Fixes problem when tooltip is data-bound
            -->
            <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource MetroToolTip}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="0.5*" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="0.7*" />
            <RowDefinition Height="0.5*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" x:Name="WorkLists">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="{Binding ListCnt, ConverterParameter=One, Converter={StaticResource ListsColWidthConverter}, Mode=TwoWay}" />
                <ColumnDefinition
                    Width="{Binding ListCnt, ConverterParameter=Two, Converter={StaticResource ListsColWidthConverter}, Mode=TwoWay}" />
                <ColumnDefinition
                    Width="{Binding ListCnt, ConverterParameter=Three, Converter={StaticResource ListsColWidthConverter}, Mode=TwoWay}" />
            </Grid.ColumnDefinitions>
            <!--                       ThisMinute -->
            <Grid Grid.ColumnSpan="1">

                <local:WhatMinuteControl ThisName="ThisMinute" />

            </Grid>
            <!--                       ThatMinute -->
            <Grid Grid.Column="1"
                  Grid.ColumnSpan="{Binding ListCnt, ConverterParameter=Two, Converter={StaticResource ListsColWidthConverter}, Mode=TwoWay}"
                  Visibility="{Binding ListCnt, ConverterParameter=Two, Converter={StaticResource ThatMinVisConverter}}">

                <local:WhatMinuteControl ThisName="ThatMinute" />

            </Grid>
            <!--                       TheOtherMinute -->
            <Grid Grid.Column="2"
                  Grid.ColumnSpan="{Binding ListCnt, ConverterParameter=Three, Converter={StaticResource ListsColWidthConverter}, Mode=TwoWay}"
                  Visibility="{Binding ListCnt, ConverterParameter=Three, Converter={StaticResource ThatMinVisConverter}}">

                <local:WhatMinuteControl ThisName="TheOtherMinute" />

            </Grid>
        </Grid>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="1"
                    Visibility="{Binding TimerState, Mode=TwoWay, Converter={StaticResource TimerStateVisibilityConverter}}">
            <!-- ReSharper disable once InconsistentNaming -->
            <RadioButton x:Name="OneListRB"
                         IsEnabled="{Binding TimerState, Converter={StaticResource TimerStateConverter}, Mode=TwoWay}"
                         IsChecked="{Binding ListCnt, ConverterParameter=One, Converter={StaticResource EnumBooleanConverter}}"
                         GroupName="CntListsGroup" Margin="4,0" FontSize="9" Content="This" />
            <!-- ReSharper disable once InconsistentNaming -->
            <RadioButton x:Name="TwoListRB"
                         IsEnabled="{Binding TimerState, Converter={StaticResource TimerStateConverter}, Mode=TwoWay}"
                         IsChecked="{Binding ListCnt, ConverterParameter=Two, Converter={StaticResource EnumBooleanConverter}}"
                         GroupName="CntListsGroup" Margin="4,0" FontSize="9" Content="This - That" />
            <!-- ReSharper disable once InconsistentNaming -->
            <RadioButton x:Name="ThreeListRB"
                         IsEnabled="{Binding TimerState, Converter={StaticResource TimerStateConverter}, Mode=TwoWay}"
                         IsChecked="{Binding ListCnt, ConverterParameter=Three, Converter={StaticResource EnumBooleanConverter}}"
                         GroupName="CntListsGroup" Margin="4,0" FontSize="9" Content="This - That - TheOther" />
            <!-- ReSharper disable once InconsistentNaming -->
            <RadioButton x:Name="AmrapRB"
                         IsEnabled="False"
                         Visibility="Collapsed"
                         GroupName="CntListsGroup"
                         Margin="4,0" FontSize="9" Content="AMRAP" />
        </StackPanel>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.2*" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0">
                <TextBlock Text="Minute: " />
                <TextBlock Text="{Binding TheMinute, Mode=TwoWay}" />
            </StackPanel>
            <TextBlock x:Name="TimerDisplay" Grid.Row="1"
                       Text="{Binding TimerText, Mode=TwoWay}"
                       Foreground="{Binding TimerDisplayForeground, Mode=TwoWay}"
                       FontSize="{Binding WindowState, Converter={StaticResource WinStateFontSizeConverter}, Mode=TwoWay}"
                       HorizontalAlignment="Center" VerticalAlignment="Center" />
            <!-- <TextBlock Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center">Placeholder</TextBlock> -->
        </Grid>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <CheckBox x:Name="TenSecChk" IsChecked="{Binding DoTenSecondCountdown, Mode=TwoWay}" IsEnabled="False"
                      ToolTip="Count down last 10 secs." Grid.Column="2" HorizontalAlignment="Center"
                      Visibility="Hidden"
                      VerticalAlignment="Center" Content="10 sec." />
            <Button x:Name="StartBtn" Command="{Binding StartTimerCmd}" HorizontalAlignment="Center"
                    Grid.Column="1"
                    VerticalAlignment="Center" IsDefault="True"
                    Content="{Binding TimerState, Converter={StaticResource StartBtnCptnConverter}, Mode=TwoWay}"
                    Height="28" MinWidth="48" />
            <Button x:Name="StopBtn" Command="{Binding StopTimerCmd}" Grid.Column="2" HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="{Binding TimerState, Converter={StaticResource StopBtnCptnConverter}, Mode=TwoWay}"
                    MinWidth="48" Height="28" />
            <!-- <Button x:Name="PauseBtn" Command="{Binding PauseTimerCmd}" IsEnabled="{Binding TimerState, Mode=TwoWay, Converter={StaticResource timerStateConverter}, ConverterParameter=false}"   Grid.Column="4"  HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1">Pause</Button>
            -->
            <Button x:Name="PauseBtn" Command="{Binding PauseTimerCmd}" Grid.Column="3" HorizontalAlignment="Center"
                    VerticalAlignment="Center" Content="Pause"
                    MinWidth="48" Height="28" />
        </Grid>
        <Grid Grid.Row="4"
              Visibility="{Binding TimerState, Mode=TwoWay, Converter={StaticResource TimerStateVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Margin="0,4">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="'Minute':"
                           ToolTip="How long a 'minute' lasts..."
                           Margin="0,0,6,0" />
                <xctk:IntegerUpDown x:Name="LengthOfMinute" Value="{Binding LengthOfMinute, Mode=TwoWay}"
                                    IsEnabled="{Binding TimerState, Converter={StaticResource TimerStateConverter}, Mode=TwoWay}"
                                    Minimum="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="1" Margin="0,4">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                           FontSize="13"
                           Text="Total Time:" Margin="0,0,6,0" />
                <xctk:IntegerUpDown x:Name="TotalTime" Value="{Binding TotalTime, Mode=TwoWay}"
                                    FontSize="13"
                                    IsEnabled="{Binding TimerState, Converter={StaticResource TimerStateConverter}, Mode=TwoWay}"
                                    Minimum="2" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </StackPanel>
        </Grid>
    </Grid>

</controls1:MetroWindow>
